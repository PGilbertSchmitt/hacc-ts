// Assignment
a = 1

// Boolean Logic
true || false
false && true

// Comparison
1 == 1; 2 != 3
4 < 5
6 > 7
9 <= 10
11 >= 12

// Set Math
<# 1,2,3 #> & <# 2,3,4 #>
<# a,b,c #> | <# b,c,d #>
<# a,c,e #> ^ <# a,b,c #>

// Range
1..8
2*3...4-7

// Addition
13 + 14
14 - 15

// Multiplication
16 * 17
18 / 19
20 % 21

// Exponentiation
22 ** 23

// Unary
-a
-1

// Member
a.b // Comment doesn't matter here
 .c
() => {}.foo
-happy.bug.exe

// Call
someFunc(99, 98)

// Index
([1,2,3] & [4,5,6])[77]

// Literals
27
true
false
null
identifier
"string"
""
["array", literal]
[]
{
  hash: literal
}
{}
<# a, b, c #>
<##>
(a, b) => (
  function + block
)
() => some + expression
(group - expression)
() => { // Returns an empty map, {} does not denote a block
}

// Flow control
output = if {
  (a == b): foo()
  (a == c): (
    bar()
    baz()
  )
}

if { a: <- b; c: d }

switch (someVal) {
  true: a
  false: b
  null: c
}

// Complex
some.object.val = [1,2,3].map((num) => ({
  average: avg(num),
  double: dbl(num) 
}))[2]

special = (a, b) => (
  if {
    (a == 0): <- 7
    (b == 0): <- 9
  }
  <- 8
)
